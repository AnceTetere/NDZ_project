processingTwoes <- function(x, o) {
  #x - table; o - occurences
  # No divniekiem izdali tos, kam ir divi vienādi sākuma vai beigu kodi vienā mēnesī

  x2_uzVieniniekiem <- data.frame()
  x2_trueDoubles <- data.frame()
  
  for (r in seq(1, nrow(x), by = 2)) {
    if (doublesTest(r, x)) {
      if ((x$start[r] == x$start[r + 1] || x$end[r] == x$end[r + 1]) || ((x$zinkod[r] == "40" || x$zinkod[r+1] == "41") && (x$NDZ_sanemsanas_datums[r] != x$NDZ_sanemsanas_datums[r+1]))) {
        x2_uzVieniniekiem <- rbind(x2_uzVieniniekiem, x[c(r, r + 1),])    # 1586 rows
      } else {
        x2_trueDoubles <- rbind(x2_trueDoubles, x[c(r, r + 1),]) 
        if (!(x$pseidokods[r] == x$pseidokods[r + 1] &&
              x$dnperk[r] == x$dnperk[r + 1]) &&
            (x$nmrkod[r] == x$nmrkod[r + 1])) {
          stop(cat("Rindās ", r, " un ", r + 1, " ir nesakritības."))
        }
      }
    } else {
      cat("Rindās", r, "un", r + 1, "pamatkodi atšķiras.")
    }
  }
  

  rm(x, r)
  
  #7 tabulu x2_uzVieniniekiem sūta uz vieninieku apstrādi.
  #7.1 Pārbaude vai nav dubultnieki
  
  if(nrow(x2_uzVieniniekiem) > 0) {
    sendTo_tempNDZ(processingOnes(x2_uzVieniniekiem, o))
  } else {
    cat("No divniekiem atvasinātajā vieninieku tabulā nav nevienas rindas.")
  }
  rm(x2_uzVieniniekiem)

  #8 Izstrādā x2_trueDoubles
  #8.1. Pārbaude vai šie visi ir īstie dubultnieki
  y <-
    x2_trueDoubles[order(x2_trueDoubles$pseidokods, x2_trueDoubles$nmrkod),]
  test <- 0
  
  for (r in seq(1, nrow(y), by = 2)) {
    if (doublesTest(r, y))
      test <- test + 2
  }
  if (test == nrow(y)) {
    cat("PĀRBAUDE IZIETA: \n
      Tabulā visi ir īstie dubultnieki, ar sākuma un beigu kodu")
    rm(y, test, r)
  } else {
    stop(cat("PĀRBAUDE NAV IZIETA:\n
           Tabulā NAV tikai dubultnieki!"))
  }
  
  sendTo_tempNDZ(processingDoubles(x2_trueDoubles, o))
  rm(x2_trueDoubles)
}
