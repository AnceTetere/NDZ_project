#Odd occurances: Izstrādā trijniekus
#1. Ielādē tabulu

# Trijnieku tabulā unikālais indivīds - šajā projektā definēts kā
# period == ps_code == dn_code == nm_code - parādas trīs reizes.
# Funkcija processingThrees(tabula, occurances) šo indivīda
# trijrindu kopu sadala un aizsūta divnieku un vieninieku apakštabulās.

processingThrees <- function(x, o) {
  x3_divnieki <- data.frame()
  x3_vieninieki <- data.frame()

for (k in seq(1, nrow(x), by = 3)) {
    #TESTĒŠANAI: k <- sample(seq(1, nrow(x), by = 3), size = 1, replace = F)
  x3 <- x[x$ps_code == x$ps_code[k],]
    #TESTĒŠANAI: x[x$ps_code == x$ps_code[k], ]
    # Ja visām trim rindām ir sākuma kodi
    if (sum(x3$start == "1") == 3) {
      x3_vieninieki <- rbind(x3_vieninieki, codes_match(x3))
      # Ja pirmajām divām rindām ir sākuma kodi tabulā, kurā datumi ailē [NDZ_sanemsanas_datums] kārtoti augošā secībā
    } else if (x3$start[1] == "1" && x3$start[2] == "1") {
     
      if ((abs(as.numeric(difftime(x3$sak_darbu[x3$start == "1"][1], x3$sak_darbu[x3$start == "1"][2], units = "days"))) <= 14) && (abs(as.numeric(difftime(x3$sak_darbu[x3$start == "1"][1], x3$beidz_darbu[x3$end == "2"], units = "days"))) > 1) && (sum(x3$period == '202201') == 3)) {
        x3_divnieki <- rbind(x3_divnieki, cancelOnes(x3))
      } else if ((abs(as.numeric(difftime(x3$sak_darbu[x3$start == "1"][1], x3$sak_darbu[x3$start == "1"][2], units = "days"))) <= 7) && (abs(as.numeric(difftime(x3$sak_darbu[x3$start == "1"][1], x3$beidz_darbu[x3$end == "2"], units = "days"))) > 1)) {
        x3_divnieki <- rbind(x3_divnieki, cancelOnes(x3))
      }
    } else {
      result <- splittingThrees(x3)
      
      x3_vieninieki <- rbind(x3_vieninieki, result$x_vieninieki)
      x3_divnieki <- rbind(x3_divnieki, result$x_divnieki)
      rm(result)
    }
    
    rm(x3)
  }
  
  rm(k, x)
  
  #3) Tabulu x3_vieninieki sūta caur processingOnes(x) funkciju.
  if(nrow(x3_vieninieki) > 0) {
    sendTo_tempNDZ(processingOnes(x3_vieninieki, o))
  } else {
    cat("No trijniekiem pārsūtāmajā vieninieku tabulā nebija nevienas rindas.")
  }
  rm(x3_vieninieki)
  
  
  #4) x3_divnieki sūta caur processingtwoes function.
  if(nrow(x3_divnieki) > 0) {
    processingTwoes(x3_divnieki, o)
  } else {
    cat("No trijniekiem pārsūtāmajā divnieku tabulā nebija nevienas rindas.")
  }
  rm(x3_divnieki)
}
