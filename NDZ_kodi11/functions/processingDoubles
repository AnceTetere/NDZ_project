

processingDoubles <- function(x, o) {
  #1 Pārbauda, vai tabula ir atbilstošā formātā:
  #  Tas ir, ka katrā pāra rindā, ir viens NA ailē [sak_darbu] un
  #  viens NA ailē [beidz_darbu] ailē, bet ne vienā rindā abi, vai vienā ailē abi.
  #  Šajā kodā tos dēvē 'Īstie dubultnieki'.
  x <- x[order(x$ps_code, x$dnperk, x$nm_code, x$NDZ_sanemsanas_datums),]
  temp <- data.frame()
  
  for (k in seq(1, nrow(x), by = 2)) {
    if ((is.na(x$sak_darbu)[k] && is.na(x$beidz_darbu[k + 1])
         || is.na(x$sak_darbu)[k + 1] && is.na(x$beidz_darbu[k])) && (x$NDZ_sanemsanas_datums[k] <= x$NDZ_sanemsanas_datums[k+1])) {
      temp <- rbind(temp, x[c(k, k + 1), ])
    }
  }
  rm(k)
  
  if (nrow(temp) == nrow(x)) {
    cat(
      "PĀRBAUDE IZIETA: Visas rindas ir Īstie Divnieki.\n
    Īstie Divnieki nozīmē, ka ierakstu pārī, kur ps_code un nm_code sakrīt, viena rinda ir ar sak_darbu
    ierakstu otra ar beidz_darbu ierakstu, bet nevienā rindā nav abi: gan sak_darbu, gan beidz_darbu datumi.
    Īstie Divnieki ir rindas, kuras ir savienojamas uz vienu ierakstu, kurā būs gan sak_darbu datums,
    gan beidz_darbu datums."
    )
    rm(temp)
  } else {
    stop(
      cat(
        "ERROR: Visas rindas NAV Īstie Divnieki. Pārskatīt tabulu.\n
       Īstie Divnieki nozīmē, ka ierakstu pārī, kur ps_code un nm_code sakrīt, viena rinda ir ar sak_darbu
       ierakstu otra ar beidz_darbu ierakstu, bet nevienā rindā nav abi: gan sak_darbu, gan beidz_darbu datumi.
       Īstie Divnieki ir rindas, kuras ir savienojamas uz vienu ierakstu, kurā būs gan sak_darbu datums,
       gan beidz_darbu datums."
      )
    )
  }
  
  #2 Savienojam duplikātu rindas tā, lai sākuma un beigu datumi ir vienā ailē

  x_savienotieDivnieki <- data.frame()
  x <-
    x[order(x$period,
            x$ps_code,
            x$dnperk,
            x$nm_code,
            x$NDZ_sanemsanas_datums),]

  for (O in seq(1, nrow(x), by = 2)) {
    y <- x[c(O, O + 1),]
  
    if (y$NDZ_sanemsanas_datums[1] <= y$NDZ_sanemsanas_datums[2] && doublesTest(1, y)) {
      
      #pataisa abas rindas vienādas
      y$sak_darbu[y$end == "2"] <- y$sak_darbu[y$start == "1"] 
      y$beidz_darbu[y$start == "1"] <- y$beidz_darbu[y$end == "2"]
      y$start <- "1"
      y$end <- "2"
      
      #Piešuj pirmo rindu x_savienotieDivnieki tabulai
      x_savienotieDivnieki <- rbind(x_savienotieDivnieki, y[1, ])
    } else {
      stop(cat("Apstrādājot dubultniekus caur processingDouble(), kas nāk no", o, "-nieku apstrādes, dubultnieku sākuma datums NAV agrāks vai vienāds ar beigu datumu. TrueDoubles rindas: ",
               O, "un", O + 1.))
    }
  }
  rm(y)
  
  #3 Pārbaudām vai izdalītās rindas sakrīt, vai ailēs [sak_darbu] un [beidz_darbu] nav NAs.
  
  if (nrow(x_savienotieDivnieki) * 2 == nrow(x)) {
    if (sum(is.na(x_savienotieDivnieki$sak_darbu)) == 0) {
      if (sum(is.na(x_savienotieDivnieki$beidz_darbu)) == 0) {
        cat(
          "Funkcijā processingDoubles(), jaunizveidotā tabula x_savienotieDivnieki ir izgājusi pārbaudes un tālāk var sarēķināt dienas"
        )
        rm(x)
      } else {
        stop(cat("Datumu ailē [beidz_darbu] ir NA vienības."))
      }
    } else {
      stop(cat("Datumu ailē [sak_darbu] ir NA vienības."))
    }
  } else {
    stop(cat("No Īsto Divnieku tabulas izvilktāts rindas nesakrīt."))
  }
  
  rm(O)
  
  #4 Tabulu x_savienotieDivnieki apstrādā sekojošos punktos.
  # Piezīme, lai nesajauktu:
  # Lai arī tabulā x_savienotieDivnieki rindas ir pa vienai, datumi ir dubulti.
  # Ar funkciju processingOnes() apstrādā tikai tos vieniniekus,
  # kuriem ir vai nu datums ailē [sak_darbu] vai ailē [beidz_darbu],
  # bet ne abās.
  
  # Ja datumi ir abās ailēs, kā tās ir tabulās, ko apstrādā šī funkcija
  # processingDoubles(), kas pārbauda un savieno vērtības,
  # tad dienu aprēķins tiek arī veikts tepat.
  # Un tad pārsūtīts uz temp_NDZ.
  
  #5 Sakārto tabulu
  x <- x_savienotieDivnieki
  x <- x[order(x$ps_code, x$nm_code),]
  rownames(x) <- NULL
  

  x$dienas1 <-
    as.numeric(difftime(as.Date(x$beidz_darbu), as.Date(x$sak_darbu), units = "days")) + 1
  x$dienas <- x$dienas1[(!is.na(x$sak_darbu))]
  x$dienas1 <- NULL
  rm(x_savienotieDivnieki)
  
  x <- x[order(x$ps_code, x$nm_code),]
  
  #Lēmums par kodiem 40
  if("40" %in% x$zinkod || "41" %in% x$zinkod) {
    x$dienas[x$sak_darbu == x$beidz_darbu] <- 0
  } else {
    cat("Šajā tabulā nav kodu 40 un 41.")
  }
  
  return(x)
}
